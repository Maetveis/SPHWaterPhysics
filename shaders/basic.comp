#version 450

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in; // workgroup size

layout(std430, binding = 0) restrict coherent buffer positionBuffer
{
    vec3 position[];
};

layout(std430) restrict readonly buffer pressureBuffer
{
	float pressure[];
};

uniform float dt;
uniform vec3 target;

uvec3 resolution = gl_NumWorkGroups * gl_WorkGroupSize;

void main()
{
    uint id =
        gl_GlobalInvocationID.x * resolution.y * resolution.z +
        gl_GlobalInvocationID.y * resolution.z +
        gl_GlobalInvocationID.z;

    vec3 pos = position[id];
    vec3 toTarget = target - pos;
    float l = length(toTarget);
    float strength = min(l * l - 0.4, 5.0);

    position[id] = pos +
        0.1 * strength * toTarget * dt +
        0.1 * dt * toTarget * max(0.3 - pressure[id], -5.0);
}
